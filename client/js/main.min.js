let winManager={slickUI:null,resizeNeeded:!1,ticksSinceEvent:0,healthbar:null,healthbarbg:null,deathmessage:null,deathmessagetext:null,deathmessagetimer:null,statPanel:null,healthbarValues:{hp:null,ammo:null,kills:null},init(){window.addEventListener("resize",()=>{this.resizeNeeded=!0,this.ticksSinceEvent=0})},resizeUI(){let e=window.innerWidth*window.devicePixelRatio,t=(window.innerHeight,window.devicePixelRatio,Math.min(64,.6*e/9)),i=9*t+40;for(let e=1;e<=9;e++){let a="#inv"+e;$(a).height(t),$(a).width(t),$(a).css({left:(window.innerWidth-i)/2+84*e,bottom:t})}$(".invIcon").height(t-2),$(".invIcon").width(t-2),this.healthbar.height(.4*t),this.healthbar.width(i-4),this.healthbarbg.height(.4*t+4),this.healthbarbg.width(i),this.healthbarbg.css({left:(window.innerWidth-i)/2,bottom:t-.4*t+4-20}),this.resizeDeathMessage()},resizeDeathMessage(){let e=window.innerWidth*window.devicePixelRatio,t=(window.innerHeight,window.devicePixelRatio,9*Math.min(64,.6*e/9)+40),i=$("#youdiedtitle").outerHeight(!0)+$("#respawntime").outerHeight(!0);this.deathmessage.height(i),this.deathmessage.width(.66*t),this.deathmessage.css({left:window.innerWidth/2})},createUI(){this.healthbar=$("#hp"),this.healthbarbg=$("#hpbg"),this.deathmessage=$("#youdied"),this.deathmessagetext=$("#respawntime"),this.deathmessagetimer=0,this.resizeUI();let e=Math.min(192);this.statPanel=new SlickUI.Element.Panel(16,16,e,120),this.slickUI.add(this.statPanel),this.statPanel.alpha=.8,this.healthbarValues.hp=new SlickUI.Element.Text(24,20,"HP: 100",24),this.healthbarValues.ammo=new SlickUI.Element.Text(24,48,"Bullets: 100",24),this.healthbarValues.kills=new SlickUI.Element.Text(24,76,"KIlls: 0",24),this.slickUI.add(this.healthbarValues.hp),this.slickUI.add(this.healthbarValues.ammo),this.slickUI.add(this.healthbarValues.kills)},updateHealthBar(){let e=this.healthbarbg.width()-4;this.healthbar.width(e*rin.game.currentPlayer.hp/100),this.healthbarValues.ammo.value="Bullets: "+rin.game.currentPlayer.inventory[rin.game.currentPlayer.activeWeapon].ammo,this.healthbarValues.kills.value="Kills: "+rin.game.currentPlayer.kills,this.healthbarValues.hp.value="HP: "+rin.game.currentPlayer.hp},updateDeathMessage(){if(rin.game.currentPlayer.hp<=0){this.deathmessagetimer<=0&&(this.deathmessagetimer=600,this.deathmessage.css("display","block")),this.resizeDeathMessage(),this.deathmessagetimer--;let e=Math.ceil(this.deathmessagetimer/60);this.deathmessagetext.text("Перерождение через "+e+" сек.")}else this.deathmessagetimer=0,this.deathmessage.css("display","none")},resizeGameWindow(){let e=window.innerWidth*window.devicePixelRatio,t=window.innerHeight*window.devicePixelRatio;rin.game.ins.scale.setGameSize(e,t),rin.layer.resize(e,t),rin.game.ins.camera.follow(rin.game.currentPlayer.gameObj,Phaser.Camera.FOLLOW_TOPDOWN,.1,.1),this.resizeUI(),layer.resizeWorld(),console.log("resize "+window.innerHeight*window.devicePixelRatio)},update(){rin.game.currentPlayer&&(this.updateHealthBar(),this.updateDeathMessage(),this.resizeNeeded&&(this.ticksSinceEvent++,this.ticksSinceEvent<5||(this.ticksSinceEvent=0,this.resizeNeeded=!1)))},updateActiveWeapon(e,t){let i="#inv"+e;$("#inv"+t).css("opacity","0.5"),$(i).css("opacity","1")}};class Bonus{static list={};static group=null;static createBonus(e){new Bonus(e.category,e.type,e.position,e.id)}static destroyBonus(e){Bonus.list[e].destroy(),delete Bonus.list[e]}static onInitialJoinPopulateBonus(e){for(let t in e)new Bonus("ammo",e[t].type,e[t].position,t)}constructor(e,t,i,a){this.id=a,this.type=t,this.category=e,this.position=i,this.gameObj=this.constructor.group.create(i[0],i[1],t),this.gameObj.anchor.x=.5,this.gameObj.anchor.y=.5,this.constructor.list[this.id]=this}destroy(){this.gameObj.kill()}}class Enemy{static wave={};static group=null;static createEnemy(e){new Enemy(e.id,e.position,e.type)}static removeEnemy(e){Enemy.wave[e]&&(Enemy.wave[e].gameObj.kill(),delete Enemy.wave[e])}static updateAll(e){for(let t in e)Enemy.wave[t]&&Enemy.wave[t].update(e[t])}static updateAllPositions(){for(let e in Enemy.wave)Enemy.wave[e].updatePositions()}static onInitialJoinPopulateEnemies(e){for(let t in e)t in Enemy.wave||new Enemy(t,e[t].position)}constructor(e,t,i){this.id=e,this.type=i,this.gameObj=Enemy.group.create(t[0],t[1],"enemy-"+this.type+"-"+Math.floor(2*Math.random()+1)),this.gameObj.anchor.x=.5,this.gameObj.anchor.y=.5,this.x=t[0],this.y=t[1],this.angle=0,Enemy.wave[e]=this}update(e){this.x=e.position[0],this.y=e.position[1],this.hp=e.hp,this.gameObj.angle=this.gameObj.targetAngle=e.angle}updatePositions(){this.gameObj.x=this.x,this.gameObj.y=this.y}}class LineDrawer{static group=null;static list={};static updateAll(){for(let e in this.list)this.list[e].update()}constructor(){this.graphics=rin.game.ins.make.graphics(0,0),LineDrawer.group.add(this.graphics),this.graphics.lineStyle(2,16767232,1),this.graphics.endFill(),this.timeAlive=0,this.id=Math.random(),LineDrawer.list[this.id]=this}update(){this.timeAlive++,this.timeAlive>4&&(this.graphics.clear(),this.graphics.destroy(),delete LineDrawer.list[this.id])}}class Player{static list={};static group=null;static addNewPlayer(e){new Player(e)}static removePlayer(e){Player.list[e].gameObj.kill(),delete Player.list[e]}static onInitialJoinPopulatePlayers(e){for(let t in e)new Player(t)}static updateAll(e){for(let t in e)Player.list[t]&&Player.list[t].update(e[t])}static updateAllPositions(){for(let e in Player.list)Player.list[e].updatePositions()}static changeInventory(){}constructor(e,t){e&&(this.id=e,this.toDelete=!1,this.x=260,this.y=260,this.angle=0,t&&(this.isCurrent=t),this.gameObj=this.constructor.group.create(260,260,"player"),this.gameObj.anchor.x=.5,this.gameObj.anchor.y=.5,this.gameObj.scale.setTo(1),this.hp=100,this.kills=0,this.inventory={rifle:0,shotgun:0,sniper:0},this.activeWeapon=Object.keys(this.inventory)[0],this.constructor.list[e]=this)}update(e){this.x=e.position[0],this.y=e.position[1],this.kills=e.kills,this.inventory=e.inventory,this.activeWeapon=e.activeWeapon,this.hp=e.hp,this.isCurrent?rin.game.currentPlayerUpdate(e):this.gameObj.angle=this.gameObj.targetAngle=e.angle}updatePositions(){this.gameObj.x=this.x,this.gameObj.y=this.y}}$(document).ready((function(){rin.init()}));let rin={$socket:null,name:"",layer:null,init(){this.popups.open(".statistic-popup"),this.$socket=io()},async initGame(){return await this.preload.start(),$("._no-game").each((function(e){$(this).addClass("hide")})),$(".game-wr").removeClass("hide"),await this.game.init(),winManager.init(),Promise.resolve()},connect(e){this.$socket=io("/"+e),this.$socket.on("roomsList",rin.rooms.show),this.$socket.on("newRoom",rin.rooms.showNewRoom),this.$socket.on("updateRoom",rin.rooms.update),this.$socket.on("removeRoom",rin.rooms.removeRoom),rin.socket.init()},rooms:{all:{},show(e){if($(".rooms").removeClass("hide"),$(".play").addClass("hide"),Object.keys(e).length){$(".room-items-empty").addClass("hide");for(let t in e)rin.rooms.showNewRoom(e[t])}},update(e){for(let t in e)rin.rooms.updateRoom(e[t])},showNewRoom(e){if($(".room-items-empty").hasClass("hide")||$(".room-items-empty").addClass("hide"),e.id in rin.rooms.all)return;let t=$("._test-room-item").clone();$(t).attr("data-id",e.id),$(t).removeClass("_test-room-item"),$(t).find("._room-id").text(e.id),$(t).find("._room-title").text(e.title),$(t).find("._room-difficulty").text(rin.rooms.getTranslate(e.difficulty)),$(t).find("._room-location").text(rin.rooms.getTranslate(e.location)),$(t).attr("data-location",e.location),$(t).find("._room-players").text(`${e.playerCount}/${e.maxPlayerCount}`),+e.maxPlayerCount==+e.playerCount&&$(t).find("button").attr("disabled",!0),$("._room-items-all").append(t),rin.rooms.all[e.id]=e},updateRoom(e){let t=$(`.room-item[data-id=${e.id}]`);$(t).find("._room-id").text(e.id),$(t).find("._room-title").text(e.title),$(t).find("._room-difficulty").text(rin.rooms.getTranslate(e.difficulty)),$(t).find("._room-location").text(rin.rooms.getTranslate(e.location)),$(t).attr("data-location",e.location),$(t).find("._room-players").text(`${e.playerCount}/${e.maxPlayerCount}`),+e.maxPlayerCount==+e.playerCount&&$(t).find("button").attr("disabled",!0),rin.rooms.all[e.id]=e},removeRoom(e){delete rin.rooms.all[e],$(`.room-item[data-id=${e}]`).remove(),Object.keys(rin.rooms.all)||$(".room-items-empty").removeClass("hide")},async join(e){rin.rooms.currentId=$(e.target).closest(".room-item").data("id"),rin.game.location=$(e.target).closest(".room-item").data("location"),await rin.initGame()},createReq(e){e.preventDefault(),$(e.target).removeClass("error");let t={};for(let i of $(e.target).serializeArray())t[i.name]=i.value;for(let i in t)if(!t[i])return void $(e.target).addClass("error");rin.$socket.emit("createRoom",t),rin.popups.close(".room-create")},getTranslate(e){switch(e){case"easy":return"Легко";case"medium":return"Средняя";case"difficult":return"Трудная";case"nightmare":return"Кошмар";case"default":return"Луг";case"city":return"Город";case"desert":return"Пустыня";case"canyon":return"Каньон";default:return""}}},preload:{start:()=>(window.loading_screen=pleaseWait({logo:"/assets/logo.jpg",backgroundColor:"#383838",loadingHtml:"<div class='spinner'><div class='bounce1'></div><div class='bounce2'></div><div class='bounce3'></div></div>"}),Promise.resolve()),stop(){window.loading_screen.finish()}},inputHandler:{inputs:{up:!1,down:!1,right:!1,left:!1},sendCooldown:1,init(){document.onkeydown=e=>{68===e.keyCode?this.inputs.right=!0:83===e.keyCode?this.inputs.down=!0:65===e.keyCode?this.inputs.left=!0:87===e.keyCode?this.inputs.up=!0:e.keyCode>=49&&e.keyCode<=57&&rin.game.changeInventory(e.keyCode-48),rin.socket.updateServer()},document.onkeyup=e=>{68===e.keyCode?this.inputs.right=!1:83===e.keyCode?this.inputs.down=!1:65===e.keyCode?this.inputs.left=!1:87===e.keyCode&&(this.inputs.up=!1),rin.socket.updateServer()},window.onblur=()=>{this.inputs.right=this.inputs.down=this.inputs.left=this.inputs.up=!1,rin.socket.updateServer()}},updateMouseDown(){rin.game.ins.input.activePointer.leftButton.isDown&&(this.sendCooldown--,this.sendCooldown||(this.sendCooldown=10,rin.GunHandler.useRequest()))}},game:{ins:null,map:null,layer:null,start:!1,location:"default",currentPlayer:null,init(){return this.ins=new Phaser.Game("100%","100%",Phaser.AUTO,"game",{preload:this.preload,create:this.create,update:this.update}),Promise.resolve()},preload(){this.load.image("player","/assets/player.png"),this.load.image("enemy-common-1","/assets/enemy-common-1.png"),this.load.image("enemy-common-2","/assets/enemy-common-2.png"),this.load.image("enemy-medium-1","/assets/enemy-medium-1.png"),this.load.image("enemy-medium-2","/assets/enemy-medium-2.png"),this.load.image("rifleammo","/assets/rifleammo.png"),this.load.image("shotgunammo","/assets/shotgunammo.png"),this.load.image("sniperammo","/assets/sniperammo.png"),this.load.image("cure","/assets/cure.png"),this.load.tilemap("map",`/assets/map/map-${rin.game.location}.csv`),this.load.image("tiles","/assets/map/map-tileset.png"),winManager.slickUI=rin.game.ins.plugins.add(Phaser.Plugin.SlickUI),winManager.slickUI.load("/assets/UI/kenney.json")},create(){this.game.world.setBounds(200,20,1440,900),this.game.map=this.add.tilemap("map",64,64),this.game.map.addTilesetImage("tiles"),rin.layer=this.game.map.createLayer(0),rin.layer.resizeWorld(),rin.layer.position.set(1,1),this.game.time.advancedTiming=!0,this.game.stage.disableVisibilityChange=!0,this.game.stage.backgroundColor="#95BCC7",this.game.scale.scaleMode=Phaser.ScaleManager.NO_SCALE,this.game.physics.startSystem(Phaser.Physics.P2JS),this.game.input.mouse.capture=!0,Player.group=this.game.add.group(),Enemy.group=this.game.add.group(),Bonus.group=this.game.add.group(),LineDrawer.group=this.game.add.group(),rin.game.initCurrentPlayer(rin.$socket.id),rin.game.ins.camera.follow(rin.game.currentPlayer.gameObj,Phaser.Camera.FOLLOW_TOPDOWN,.1,.1),rin.game.ins.time.events.loop(100,rin.socket.updateServer,this),rin.game.start=!0,rin.$socket.emit("joinRoom",rin.rooms.currentId,rin.name),winManager.createUI(),rin.preload.stop()},initCurrentPlayer(e){this.currentPlayer=new Player(e,!0)},currentPlayerUpdate(e){let t=this.ins.camera.x+this.ins.input.mousePointer.x,i=this.ins.camera.y+this.ins.input.mousePointer.y,a=Math.abs(180*Math.atan((i-this.currentPlayer.gameObj.y)/(t-this.currentPlayer.gameObj.x))/Math.PI);t>this.currentPlayer.gameObj.x&&i>this.currentPlayer.gameObj.y?this.currentPlayer.gameObj.angle=a:t<this.currentPlayer.gameObj.x&&i>this.currentPlayer.gameObj.y?this.currentPlayer.gameObj.angle=-180-a:t<this.currentPlayer.gameObj.x&&i<this.currentPlayer.gameObj.y?this.currentPlayer.gameObj.angle=-180+a:this.currentPlayer.gameObj.angle=-a,this.currentPlayer.gameObj.x=this.currentPlayer.x=e.position[0],this.currentPlayer.gameObj.y=this.currentPlayer.y=e.position[1]},changeInventory(e){rin.$socket.emit("changeInventory",e-1)},successChangeInventory(e){let t=Object.values(rin.game.currentPlayer.inventory).findIndex(t=>t.name===e.oldWeapon);rin.game.currentPlayer.activeWeapon=e.weapon,winManager.updateActiveWeapon(e.slot+1,t+1)},update(){rin.inputHandler.updateMouseDown(),LineDrawer.updateAll(),winManager.update(),Player.updateAllPositions(),Enemy.updateAllPositions()}},socket:{ins:null,init(){rin.$socket.on("connectToRoom",()=>{rin.$socket.on("newPlayer",Player.addNewPlayer),rin.$socket.on("disconnectPlayer",Player.removePlayer),rin.$socket.on("onInitialJoinPopulatePlayers",Player.onInitialJoinPopulatePlayers),rin.$socket.on("onInitialJoinPopulateEnemies",Enemy.onInitialJoinPopulateEnemies),rin.$socket.on("onInitialJoinPopulateBonus",Bonus.onInitialJoinPopulateBonus),rin.$socket.on("successChangeInventory",rin.game.successChangeInventory),rin.$socket.on("updateClientOnPlayers",Player.updateAll),rin.$socket.on("updateClientOnEnemies",Enemy.updateAll),rin.$socket.on("createEnemy",Enemy.createEnemy),rin.$socket.on("removeEnemy",Enemy.removeEnemy),rin.$socket.on("createGunShot",rin.GunHandler.createGunShot),rin.$socket.on("createBonus",Bonus.createBonus),rin.$socket.on("destroyBonus",Bonus.destroyBonus),rin.inputHandler.init()})},updateServer(){rin.$socket.emit("updateServer",{inputs:rin.inputHandler.inputs,angle:rin.game.currentPlayer.gameObj.angle})}},GunHandler:{createGunShot(e){let t=e.startx+e.length*Math.cos(e.angle/180*Math.PI),i=e.starty+e.length*Math.sin(e.angle/180*Math.PI),a=(new LineDrawer).graphics;a.moveTo(e.startx,e.starty),a.lineTo(t,i)},useRequest(){let e=rin.game.ins.input.mousePointer.x+rin.game.ins.camera.x,t=rin.game.ins.input.mousePointer.y+rin.game.ins.camera.y;rin.$socket.emit("useRequest",[e,t])}},popups:{open:function(e){$("._overlay").addClass("_show"),$("body").addClass("ow-hidden"),$(e).addClass("_show"),setTimeout(()=>{$(document).on("click",t=>{$(t.target).closest(e).length||this.close(e)})},10)},close:function(e){$(e).removeClass("_show"),$("._overlay").removeClass("_show"),$("body").removeClass("ow-hidden"),$(e).prop("classList").contains("_no-click-outside")||$(document).off("click")}}};